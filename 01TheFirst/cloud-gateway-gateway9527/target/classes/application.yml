server:
  port: 9527

spring:
  application:
    name: cloud-gateway   # 这里 最好不要用 下划线.
  cloud:
    gateway:
      # 开启负载均衡, 默认是 轮询的方式.  lb（load balance）
      discovry:
        locator:
          enabled: true # 开启从注册中心动态创建路由的功能, 利用微服务进行路由.
      routes:
        - id: payment_routh   #路由的id, 没有固定规则但要求唯一, 建议配合服务名
#          uri: http://localhost:8001   #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址.
          predicates:
            - Path=/payment/get/**    # 断言, 路径相匹配的进行路由

        - id: payment_routh2   #路由的id, 没有固定规则但要求唯一, 建议配合服务名
#          uri: http://localhost:8001   #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址.
          predicates:
            - Path=/payment/lb/**    # 断言, 路径相匹配的进行路由
            - After=2021-12-31T11:36:40.403+08:00[Asia/Shanghai]   # after: 在这个时间之后, 这个路由才有效果.  其他更多的可以看脑图
            # cmd, curl http://localhost:9527/payment/lb --cookie "username=zzyy" 带cookie 才可以访问成功. 浏览器http://localhost:9527/payment/lb 访问不了.
#            - Cookie=username,zzyy
            # cmd, curl http://localhost:9527/payment/lb -H "X-Request-Id:123" 才可以访问成功. 浏览器http://localhost:9527/payment/lb 访问不了.
#            - Header=X-Request-Id, \d+   #请求头要有 X-Request-Id属性并且值为整数的正则表达式.

eureka:
  client:
    #表示是否将自己注册进 EurekaServer, 默认为 true
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息,默认为true, 单节点无所谓, 集群必须设置为 true才能配合 ribbon使用负载均衡
    fetch-registry: true
    #设置与Eureka Server交互的地址查询服务和注册服务都需要依赖这个地址
    service-url:
#      defaultZone: http://localhost:7001/eureka # 单机版
      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/ # 集群版
  instance:
    instance-id: cloud-gateway-service    #localhost:7001 status 的名称.
    prefer-ip-address: true     #访问路径显示 ip
    #Eureka客户端向服务端发送心跳的时间间隔, 单位为妙(默认是30s)
    lease-renewal-interval-in-seconds: 1
    #Eureka服务端在收到最后一次心跳后等待时间上限, 单位为秒(默认是90s), 超时将剔除服务.
    lease-expiration-duration-in-seconds: 2